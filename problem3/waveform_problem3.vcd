$date
	Tue Jan 28 04:41:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module problem3_testbench $end
$var wire 6 ! out [5:0] $end
$var wire 1 " cout $end
$var reg 6 # A [5:0] $end
$var reg 6 $ B [5:0] $end
$var reg 2 % op [1:0] $end
$scope module ALU_6bit $end
$var wire 6 & A [5:0] $end
$var wire 6 ' B [5:0] $end
$var wire 2 ( op_code [1:0] $end
$var wire 6 ) res3 [5:0] $end
$var wire 6 * res2 [5:0] $end
$var wire 6 + res1 [5:0] $end
$var wire 6 , res0 [5:0] $end
$var wire 6 - out [5:0] $end
$var wire 1 . cout_add $end
$var wire 1 " cout $end
$scope module one $end
$var wire 6 / A [5:0] $end
$var wire 6 0 B [5:0] $end
$var wire 6 1 res [5:0] $end
$var wire 1 . cout $end
$upscope $end
$scope module three $end
$var wire 6 2 A [5:0] $end
$var wire 6 3 B [5:0] $end
$var wire 6 4 res [5:0] $end
$upscope $end
$scope module two $end
$var wire 6 5 B [5:0] $end
$var wire 6 6 res [5:0] $end
$upscope $end
$scope module zero $end
$var wire 6 7 A [5:0] $end
$var wire 6 8 B [5:0] $end
$var wire 6 9 res [5:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b110110 9
b10100 8
b111011 7
b101100 6
b10100 5
b100010 4
b10100 3
b111011 2
b110111 1
b10100 0
b111011 /
1.
b110110 -
b110110 ,
b110111 +
b101100 *
b100010 )
b0 (
b10100 '
b111011 &
b0 %
b10100 $
b111011 #
0"
b110110 !
$end
#1
b100011 !
b100011 -
0.
b100011 +
b100011 1
b0 )
b0 4
b11001 ,
b11001 9
b1 %
b1 (
b110110 *
b110110 6
b1010 $
b1010 '
b1010 0
b1010 3
b1010 5
b1010 8
b101 #
b101 &
b101 /
b101 2
b101 7
#2
b100111 !
b100111 -
1.
b11010 +
b11010 1
b101 )
b101 4
b1000 ,
b1000 9
b10 %
b10 (
b100111 *
b100111 6
b11001 $
b11001 '
b11001 0
b11001 3
b11001 5
b11001 8
b1111 #
b1111 &
b1111 /
b1111 2
b1111 7
#3
b11001 !
b11001 -
0.
b111 +
b111 1
b11001 )
b11001 4
b1001 ,
b1001 9
b11 %
b11 (
b11101 *
b11101 6
b100011 $
b100011 '
b100011 0
b100011 3
b100011 5
b100011 8
b11110 #
b11110 &
b11110 /
b11110 2
b11110 7
#4
b101 !
b101 -
1"
1.
b101 +
b101 1
b110101 )
b110101 4
b110001 ,
b110001 9
b1 %
b1 (
b111101 *
b111101 6
b11 $
b11 '
b11 0
b11 3
b11 5
b11 8
b111100 #
b111100 &
b111100 /
b111100 2
b111100 7
#5
